// <auto-generated />
using System;
using BicycleCompany.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BicycleCompany.DAL.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210728122145_AddUserAndRemovePartAmount")]
    partial class AddUserAndRemovePartAmount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BicycleCompany.DAL.Models.Bicycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Bicycles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ea19dcd-17ff-4284-bf9d-d9ccf7c15fd6"),
                            Model = "Rocco",
                            Name = "Stels"
                        },
                        new
                        {
                            Id = new Guid("1ab98a7c-f5a7-42e8-9c3d-74605db7ebad"),
                            Model = "Turbo",
                            Name = "LTD"
                        },
                        new
                        {
                            Id = new Guid("6bd7520f-cb3c-4211-9649-83f0f21fc4d5"),
                            Model = "Tango",
                            Name = "Aist"
                        });
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b4e22be-c10d-4303-bf57-03eca2f13f2b"),
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("1f50c713-a570-4921-9385-e62ab540a7f0"),
                            Name = "Andrew Vertuha"
                        });
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Part", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8cc08fcb-1fdb-4353-8540-dde0b1fcce5b"),
                            Name = "Seat"
                        },
                        new
                        {
                            Id = new Guid("bd18a6ef-ea95-4adc-876c-6584223311ff"),
                            Name = "Wheel"
                        },
                        new
                        {
                            Id = new Guid("8ed78a61-1966-4237-933e-8712237156fa"),
                            Name = "Handlebar"
                        });
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.PartDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProblemId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("ProblemId");

                    b.ToTable("PartDetails");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Problem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BicycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ReceivingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BicycleId");

                    b.HasIndex("ClientId");

                    b.ToTable("Problems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f451e4eb-c5fc-4ff4-a751-57eee391f9a7"),
                            BicycleId = new Guid("0ea19dcd-17ff-4284-bf9d-d9ccf7c15fd6"),
                            ClientId = new Guid("3b4e22be-c10d-4303-bf57-03eca2f13f2b"),
                            Description = "The seat was broken in half",
                            Place = "Outside the city",
                            ReceivingDate = new DateTime(2021, 7, 28, 15, 21, 44, 832, DateTimeKind.Local).AddTicks(923),
                            Stage = 0
                        });
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("677f9e56-7ccb-4cbf-bb46-1c38a0d48649"),
                            Login = "Admin",
                            Password = "pa55w0rd",
                            Role = "Administrator"
                        },
                        new
                        {
                            Id = new Guid("4205e127-6929-4945-91ef-8e0237bfa613"),
                            Login = "User",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.PartDetails", b =>
                {
                    b.HasOne("BicycleCompany.DAL.Models.Part", "Part")
                        .WithMany("PartDetails")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BicycleCompany.DAL.Models.Problem", "Problem")
                        .WithMany("PartDetails")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Problem", b =>
                {
                    b.HasOne("BicycleCompany.DAL.Models.Bicycle", "Bicycle")
                        .WithMany("Problems")
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BicycleCompany.DAL.Models.Client", "Client")
                        .WithMany("Problems")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Bicycle", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Client", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Part", b =>
                {
                    b.Navigation("PartDetails");
                });

            modelBuilder.Entity("BicycleCompany.DAL.Models.Problem", b =>
                {
                    b.Navigation("PartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
